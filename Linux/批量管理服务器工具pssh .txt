[root@localhost ~]# ssh-keygen -t rsa

Generating public/private rsa key pair.

Enter file in which to save the key (/root/.ssh/id_rsa): /root/.ssh/09_rsa

Enter passphrase (empty for no passphrase): 

Enter same passphrase again: 

Your identification has been saved in /root/.ssh/09_rsa.

Your public key has been saved in /root/.ssh/09_rsa.pub.

The key fingerprint is:

SHA256:z/FWVP6j1Bbh+qsGdnZPaH5QuGUJfMb0l3Lro7L1XSw root@localhost

The key's randomart image is:

+---[RSA 2048]----+

|            . oo.|

|             o.*+|

|             .=*=|

|             .*.O|

|        S .  o.@.|

|         o =.+Xoo|

|          + *=E*+|

|           o..+.B|

|           .+o.+.|

+----[SHA256]-----+



[root@localhost ~]# ll .ssh/

总用量 8

-rw------- 1 root root 1675 9月  27 11:13 09_rsa

-rw-r--r-- 1 root root  396 9月  27 11:13 09_rsa.pub



分发：可配置脚本for ip in 141 109 114 32

[root@localhost ~]# sshpass -p '666666' ssh-copy-id -i /root/.ssh/09_rsa.pub -o StrictHostKeyChecking=no root@192.168.197.14

/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/09_rsa.pub"

/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed

/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys



Number of key(s) added: 1



Now try logging into the machine, with:   "ssh -o 'StrictHostKeyChecking=no' 'root@192.168.197.14'"

and check to make sure that only the key(s) you wanted were added.



[root@localhost ~]# sshpass -p '666666' ssh-copy-id -i /root/.ssh/09_rsa.pub -o StrictHostKeyChecking=no root@192.168.197.4

/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/09_rsa.pub"

/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed

/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys



Number of key(s) added: 1



Now try logging into the machine, with:   "ssh -o 'StrictHostKeyChecking=no' 'root@192.168.197.4'"

and check to make sure that only the key(s) you wanted were added.







测试登录：

[root@localhost ~]# ssh -i /root/.ssh/09_rsa root@192.168.197.14

Last failed login: Fri Sep 27 11:04:14 CST 2019 from 192.168.197.28 on ssh:notty

There was 1 failed login attempt since the last successful login.

Last login: Fri Sep 27 11:02:15 2019 from 192.168.197.28

[root@localhost ~]# hostname -I

192.168.197.14 





[root@localhost ~]# ssh -i /root/.ssh/09_rsa root@192.168.197.4

Last failed login: Fri Sep 27 11:04:11 CST 2019 from 192.168.197.28 on ssh:notty

There was 1 failed login attempt since the last successful login.

Last login: Fri Sep 27 11:02:07 2019 from 192.168.197.28

[root@node1 ~]# hostname -I

192.168.197.4 172.17.0.1 





+++++++++++++++++++++++++

使用pssh管理;;为了安全考虑，整体思路是在跳板机上不能直接ssh进到客户机，需要指定第二个密钥（和跳板机登录不是一个）；同理pssh也需要指定密钥

pssh -h ip_list -O "IdentityFile=/root/.ssh/test_rsa" -i "ifconfig"



###IdentityFile=/root/.ssh/test_rsa  指定私钥位置等同于ssh的配置文件里添加（/etc/ssh/ssh_config）

Host 主机别名（随意起名）

    HostName 主机地址（ip地址或者域名地址）

    User 用户名（如root）

    Port 端口号（如22）

    IdentityFile  私钥文件路径（如 ~/.ssh/我的私钥）

 

 需要注意的是私钥文件的访问权限仅限当前用户   

 chmod 400 私钥文件路径

 

 如果不想每次输入指定私钥则可以如下

 [root@localhost ssh]# tail /etc/ssh/ssh_config 

# If this option is set to yes then remote X11 clients will have full access

# to the original X11 display. As virtually no X11 client supports the untrusted

# mode correctly we set this to yes.

	ForwardX11Trusted yes

# Send locale-related environment variables

	SendEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES

	SendEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT

	SendEnv LC_IDENTIFICATION LC_ALL LANGUAGE

	SendEnv XMODIFIERS

        IdentityFile=/root/.ssh/09_rsa  ###增加这一行，不需要重启ssh，及时生效


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



pssh 用于同时管理多台服务器，在安装Hadoop时可以同步Hadoop已经配置好的安装文件，十分方便，本文将介绍pssh的基本命令和使用方法。由于pssh基于python实现的，所以在安装之前务必保证安装好python2.6以上。

安装：
先安装ez_setup.py，ez_setup.py是python官方给出的一个安装setuptools的工具，利用它，我们可以很轻松用命令行就自动完成安装过程。
#wget http://peak.telecommunity.com/dist/ez_setup.py
或者浏览器下载https://pan.baidu.com/s/1ramMZes
#python ez_setup.py

下载pssh安装包：
wget http://parallel-ssh.googlecode.com/files/pssh-2.3.tar.gz
如果Google被墙了可以使用这个站点：
wget http://files.opstool.com/files/pssh-2.3.tar.gz
或者浏览器下载https://pan.baidu.com/s/1dGwwBg1

tar zxvf pssh-2.3.tar.gz
cd pssh-2.3
python setup.py install


使用：
(假设ssh已做好SSH信任，如果没有的话会要求输入密码关于ssh信任可以参考http://be-evil.org/linux-ssh-login-without-using-password.html)
#!/bin/bash
for ip in `cat iplist`;
do
   echo yes >ssh-copy-id -i $ip;
if [ $? -eq 0 ];then
   echo -e "$ip is OK"
else
    echo -e "$ip is error"
fi
done

pssh工具包主要有5个程序:

pssh 多主机并行运行命令
pscp 传输文件到多个hosts，他的特性和scp差不多
pslurp 从多台远程机器拷贝文件
pnuke kill远程机器的进程
pslurp 从远程主机考本文件到本地
prsync 使用rsync协议从本地计算机同步到远程主机

参数说明:
-h 执行命令的远程主机列表，是一个文本文件，主机ip或主机名以回车符分隔。
-l 远程机器的用户名
-p 一次最大允许多少连接（小写）
-o 输出内容重定向到一个文件（小写）
-e 执行错误重定向到一个文件
-t 设置命令执行的超时时间
-A 提示输入密码并且把密码传递给ssh
-O 设置ssh参数的具体配置，参照ssh_config配置文件（大写）
-x 传递多个SSH 命令，多个命令用空格分开，用引号括起来
-X 同-x 但是一次只能传递一个命令
-i 显示标准输出和标准错误在每台host执行完毕后
-I 读取每个输入命令，并传递给ssh进程 允许命令脚本传送到标准输入
-P 打印输出（大写）

pssh 多主机并行运行命令：
[root@centos pssh-2.3]# pssh -P -h host.txt uptime
192.168.1.199: 11:31:06 up 5 min, 2 users, load average: 0.24, 0.13, 0.07

pscp 把文件并行地复制到多个主机上： 推送
root@centos pssh-2.3]# pscp -h host.txt /etc/profile /tmp/
[1] 11:36:55 [SUCCESS] 192.168.1.199
表示将本地的/etc/profile文件复制到目标服务器的/tmp/目录下


prsync 使用rsync协议从本地计算机同步到远程主机：
[root@centos pssh-2.3]# prsync -h host.txt -l root -a -r /etc/sysconfig /tmp/
[1] 11:38:47 [SUCCESS] 192.168.1.199
表示将本地的/etc/sysconfig目录递归同步到目标服务器的 /tmp/目录下,并保持原来的时间戳,使用用户 root


pslurp 将文件从远程主机复制到本地： 从多个远程到本地
和pscp方向相反:
[root@centos pssh-2.3]# pslurp -h host.txt -L /tmp/test -l root /tmp/network test
[1] 11:40:54 [SUCCESS] 192.168.1.199
表示将目标服务器的/tmp/network文件复制到本地的/tmp/test目录下,并更名为test(必须有)
在/tmp/test目录下即可看见192.168.1.199这个目录，目录中存放复制过来的文件。
拉取目录：将远程的/root/zz目录拉取到本地/root/zz/tomcat_backup/下，目录名称还是设置为zz
pslurp -r -h tomcat_list -L /root/zz/tomcat_backup/ /root/zz/ zz
发送目录：
 pscp -r -h ip_list -O "IdentityFile=/root/.ssh/09_rsa" /usr/local/jdk1.8.0_202/ /usr/local/

pnuke 并行在远程主机杀进程:
[root@centos pssh-2.3]# pnuke -h host.txt syslog
[1] 11:45:12 [SUCCESS] 192.168.1.199
//杀死目标服务器的syslog进程

+++++++++++++++++++++++++++++++++++++++++++++
pssh  使用：
先打通服务器的免密登陆

[root@deploy ~]# ssh-copy-id root@$ip -p 3411   ##最好配置好用户和端口

[root@deploy ~]# cat host_list02 
root@$ip:3411

[root@deploy ~]# pssh -h host_list02 -i "uptime"
[1] 16:45:34 [SUCCESS] root@$ip:3411

##备注
如果目标服务器更改了端口，此时需要重新打通，但是会报错；如下：
[root@deploy ~]# ssh-copy-id 192.168.2.181 -p 22
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed

/usr/bin/ssh-copy-id: ERROR: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
ERROR: @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
ERROR: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
ERROR: IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
ERROR: Someone could be eavesdropping on you right now (man-in-the-middle attack)!
ERROR: It is also possible that a host key has just been changed.
ERROR: The fingerprint for the ECDSA key sent by the remote host is
ERROR: SHA256:WZhnThU0yLQe9d/ibx5B/h6B7eVh77E60PxdGMmbAmQ.
ERROR: Please contact your system administrator.
ERROR: Add correct host key in /root/.ssh/known_hosts to get rid of this message.
ERROR: Offending ECDSA key in /root/.ssh/known_hosts:20
ERROR: ECDSA host key for 192.168.2.181 has changed and you have requested strict checking.
ERROR: Host key verification failed.

此时需要先清除老的公钥信息
ssh-keygen -R 192.168.2.181

然后重新进行授权
[root@deploy ~]# ssh-copy-id 192.168.2.181 -p 22
